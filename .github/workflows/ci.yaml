name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Install Docker Scout CLI
        run: |
          curl -sSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh
          sudo mv ~/.docker/cli-plugins/docker-scout /usr/local/bin/scout

      - name: Docker Scout Analysis for High Vulnerabilities
        id: docker_scout_high
        run: |
          docker-scout cves ${GITHUB_REPOSITORY}:${GITHUB_SHA} | tee scout-output.json
          cat scout-output.json
          high_count=$(jq '.results.vulnerabilities | map(select(.severity == "HIGH")) | length' scout-output.json)
          if [ "$high_count" -gt 0 ]; then
            echo "High severity vulnerabilities found: HIGH=$high_count"
            exit 1
          else
            echo "No high vulnerabilities found."
          fi

      - name: Docker Scout Analysis for Critical Vulnerabilities
        id: docker_scout_critical
        run: |
          docker-scout cves ${GITHUB_REPOSITORY}:${GITHUB_SHA} | tee scout-output.json
          cat scout-output.json
          critical_count=$(jq '.results.vulnerabilities | map(select(.severity == "CRITICAL")) | length' scout-output.json)
          if [ "$critical_count" -gt 0 ]; then
            echo "Critical severity vulnerabilities found: CRITICAL=$critical_count"
            exit 1
          else
            echo "No critical vulnerabilities found."
          fi


      - name: Push Docker image
        if: steps.scan.outputs.vulnerabilities == 'none'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
